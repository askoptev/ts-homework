/*
  Цели:
  Освоить методы манипуляции объектами.
  Научиться извлекать из объектов только необходимые свойства.
  Практика использования TypeScript для уточнения типов и 
  обеспечения безопасности типов при работе с объектами.

  Домашнее задание — манипуляция свойств объектов:
  Задача: написание функции, которая извлекает из объекта только заданные свойства.  
  Пример: дан объект пользователя с различными свойствами. 
  Необходимо извлечь только определённые свойства.
  Обзор ключевых понятий:
  Работа с функцией, которая принимает объект и ключи для извлечения.
  Пример реализации функции pickObjectCase.
  Типизация и безопасность:
  Значение и применение TypeScript для обеспечения типизации.
  Важность проверки на наличие свойств в объекте перед их извлечением.
  Применение generics и KeyOf для уточнения типов.
  Практическое задание:
  Создание функции для извлечения свойств объекта с использованием переданных ключей.
  Ограничения: функция должна корректно типизироваться и принимать только 
  существующие в объекте ключи.
  Результаты разместить в специальной папке для проверки.
*/

const user = {
  name: "Vasiliy",
  age: 8,
  scills: ["typescript", "javascript"],
  100: "",
};

type RecordType<T> = Record<keyof T, any>

function pickObjectKeys<T extends RecordType<T>>(object: T, keys: Array<keyof T>): RecordType<T> {
  return keys.reduce<RecordType<T>>((acc, key) => {
    if (key in object) {
      acc[key] = object[key];
    }
    return acc;
  }, {} as RecordType<T>);
}

const res = pickObjectKeys(user, ["age", "scills"]);

console.log(res);
